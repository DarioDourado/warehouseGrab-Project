generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CompanyInfo {
  name              String
  address           String
  addressLocalCode  String
  addressLocalZones String
  email             String @unique
  phone             String

  @@map("companyInfo")
}

model User {
  id               String   @id @default(uuid())
  name             String
  email            String   @unique
  passwordHash     String   @map("password_Hash")
  isAdmin          Boolean  @default(false)
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @default(now()) @map("updated_at")
  colabStatus      String
  street           String
  addressLocalCode String
  addressLocalZone String
  addressLocal     String
  phone            String

  @@map("users")
}

model Product {
  id                String           @id @default(uuid())
  upc               String
  sku               String
  name              String
  description       String
  price             Decimal
  taxId             String           @map("tax_id")
  tax               Tax              @relation(fields: [taxId], references: [id])
  photo             String
  isPack            Boolean          @default(false)
  packUnQt          Int
  expirationDate    String?
  productCategoryId String           @map("category_id")
  productCategory   ProductCategory? @relation(fields: [productCategoryId], references: [id])
  stockRecQt        Int?
  alert1            Int?
  alert2            Int?
  createdAt         DateTime         @default(now()) @map("created_at")
  updatedAt         DateTime         @default(now()) @map("updated_at")

  @@map("products")
}

model Tax {
  id          String    @id @default(uuid())
  taxValue    String    @unique
  description String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @default(now()) @map("updated_at")
  products    Product[]

  @@map("taxes")
}

model ProductCategory {
  id              String    @id @default(uuid())
  productCategory String?   @unique
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @default(now()) @map("updated_at")
  products        Product[]

  @@map("product_categories") // Alterei o nome da tabela para seguir uma convenção mais comum
}

model Supplier {
  id               String   @id @default(uuid())
  name             String
  taxNumber        String
  street           String
  addressLocalCode String
  addressLocalZone String
  addressLocal     String
  country          String
  phone1           String
  phone2           String
  email            String   @unique
  paymentCondTerm  Int
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @default(now()) @map("updated_at")

  @@map("suppliers")
}

model StorageLocation {
  id           String         @id @default(uuid())
  name         String         @unique
  description  String
  StockControl StockControl[]

  @@map("storageLocation")
}

model StockControl {
  id                String          @id @default(uuid())
  productUPC        String
  quantity          Int
  isOut             Boolean         @default(true)
  stockLocal        StorageLocation @relation(fields: [storageLocationId], references: [id])
  storageLocationId String

  @@map("stockControl")
}
